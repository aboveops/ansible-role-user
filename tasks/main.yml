---

- name: check username
  fail:
    msg: 'no username provided'
  when: username is undefined

- name: set facts
  set_fact:
    apply_to_this_host: no
    user_host_list: []
    host: {}
    nologin_shell: >-
      {%- if (ansible_os_family in [ 'Debian', 'Devuan GNU/Linux' ]) -%} /usr/sbin/nologin
      {%- else -%} /bin/nologin
      {%- endif -%}
    sudo_group: >-
      {%- if (ansible_os_family in [ 'Debian', 'Devuan GNU/Linux' ]) -%} sudo
      {%- elif (ansible_os_family in [ 'RedHat' ]) -%} wheel
      {%- else -%} sudo
      {%- endif -%}
  
- name: lookup user definition for this host
  set_fact: user_host_list={{ user_host_list|default([]) + hosts | selectattr('host', 'equalto', item) | list }}
  with_items:
    - "{{ansible_nodename}}"
    - "{{group_names}}"
    - all

#- name: check duplicate entries for user '{{username}}'
#  fail:
#    msg: "Found duplicates. Omit host."
#  when: user_host_list | dedup | length > 1

# потому что jenkins должен быть на всех машинах (all), но только на
# тех нодах, где есть docker, должен быть в его группе (prod07)

- name: check if we shall apply user settings to this host
  set_fact:
    apply_to_this_host: yes
  when: user_host_list | length > 0

- name: gathering host configuration
  set_fact:
    host: "{{user_host_list | first}}"
  when: apply_to_this_host

- name: configure sudo group
  include_tasks: configure-sudo-group.yml
  when: not (sudo_group_configured | default(no))

- name: delete user {{username}}
  user:
    name: "{{username}}"
    state: absent
    force: yes
  when:
    - apply_to_this_host
    - host.delete_user | default(delete_user)

- name: create user {{username}}
  include_tasks: create-user.yml
  when:
    - apply_to_this_host
    - not (host.delete_user | default(delete_user))

